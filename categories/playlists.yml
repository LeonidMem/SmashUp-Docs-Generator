header: 'Плейлисты'

requests:
  get:
    name: 'Получить'
    link: '[GET] /playlist/get?id=[IDS]'
    description: 'Возвращает списком сериализованные плейлисты.'

    request: '/playlist/get?id=689,964'
    response:
      - id: 689
        name: 'Пылесосен'
        description: ''
        authors: ['LeonidM']
        imageUrl: 'default'
        backgroundColor: 16777215
        type: 'playlist'
        mashups: [340, 648]
        likes: 0
        streams: 0
      - id: 964
        name: 'Убиты, но не вами'
        description: ''
        authors: ['LeonidM']
        imageUrl: '964'
        backgroundColor: 16777215
        mashups: [368, 509, 156, 114, 591, 377, 144, 376]
        likes: 1
        streams: 7

    regex:
      IDS: '\d+(?:,\d+){1,100}'

    codes:
      200:
        - Если всё хорошо и слава тебе, Господи
      400:
        - Если некорректно указаны ID
      404:
        - Если хотя бы один из указанных ID не является ID какого-либо мэшапа


  create:
    mark: 'T'
    name: 'Создать'
    link: '[GET] /playlist/create'
    description: '**[ТЕСТ]** Пока нет проверки на наличие 10 плейлистов.'

    body:
      name: 'Какое-то имя'
      description: 'Какое-то описание'
      basedImageFile: '[Base64 decoded png/jpg file]'
      __basedImageFile__: 'Параметр ''basedImageFile'' необязателен'

    response:
      id: 100
      name: 'Какое-то имя'
      description: 'Какое-то описание'
      authors: ['LeonidM']
      imageUrl: '100'
      backgroundColor: 16777215
      mashups: []
      likes: 0
      streams: 0

    codes:
      200:
        - Если плейлист был создан
      400:
        - Если у пользователя уже есть 10 плейлистов и при этом нет особых прав *(верификация, модератор, администратор)*
      500:
        - Если произошла ошибка при создании плейлиста


#  delete:
#    mark: 'T'
#    name: 'Удалить'
#    link: '[GET] /playlist/delete?id=[ID]'
#
#    regex:
#      ID: '\d+'
#
#    codes:
#      200:
#        - Если плейлист был удалён
#      400:
#        - Если указан некорректный ID
#        - Если плейлиста с указанным ID не существует
#      403:
#        - Если пользователь, который отправил запрос, не является создателем плейлиста


#  edit:
#    mark: 'T'
#    name: 'Изменить'
#    link: '[POST] /playlist/edit'
#
#    body:
#      playlistName: 'Новый плейлист'
#      imageFile: '[Base64 decoded png/jpg file]'
#      comment: 'Нужно указывать поля только в том случае, если их значения были изменены пользователем'
#
#    response:
#      playlistName: 'Новый плейлист'
#      imageUrl: '61a8f47d24e73d69ef53d1145976f97101d969a1c3cb719ad4a96d21b257949e'
#
#    regex:
#      playlistName: "^[а-яА-ЯёЁa-zA-Z0-9_\\$.,=+()*&^%$#@!\\-?':\\| ]{4,48}$"
#      'tracksUrls | YouTube': 'https://www\.youtube\.com/watch\?v=([-a-zA-Z0-9_]{11})'
#      'tracksUrls | Яндекс.Музыка': 'https://music\.yandex\.ru/album/(\d+)/track/(\d+)'
#
#    codes:
#      200:
#        - Если всё хорошо и слава тебе, Господи
#      400:
#        - Если указан некорректный ID
#        - Если плейлист с указанным ID не существует
#        - Если указан некорректный формат данных в теле запроса
#        - Если указанное название не соответствует регулярному выражению
#        - Если изображение является прозрачным
#        - Если изображение меньше 800х800 пикселей
#      403:
#        - Если пользователь, который отправил запрос, не является создателем плейлиста или вовсе забанен
#      413:
#        - Если изображение весит больше 5 МБ
#      500:
#        - Если невозможно декодировать изображение
#        - Если произошло какое-то IO исключение при работе с изображением


  add_mashup:
    mark: 'T'
    name: 'Добавить мэшап'
    link: '[POST] /playlist/add_mashup?playlistId=[PID]&id=[ID]'
    description: '**[ТЕСТ]** Пока нет проверки на наличие 100 мэшапов.'

    regex:
      PID: '\d+'
      ID: '\d+'

    codes:
      200:
        - Если мэшап был добавлен в плейлист
      400:
        - Если хотя бы один из указанных ID некорректный
        - Если в плейлисте уже есть указанный мэшап
        - Если в плейлисте уже есть 100 мэшапов
      403:
        - Если пользователь, который отправил запрос, не является создателем плейлиста
      404:
        - Если мэшап с указанным ID не существует
        - Если плейлиста с указанным ID не существует


  remove_mashup:
    mark: 'T'
    name: 'Удалить мэшап'
    link: '[POST] /playlist/remove_mashup?playlistId=[PID]&id=[ID]'

    regex:
      PID: '\d+'
      ID: '\d+'

    codes:
      200:
        - Если мэшап был удалён из плейлиста
      400:
        - Если хотя бы один из указанных ID некорректный
        - Если мэшап с указанным ID не существует
        - Если плейлиста с указанным ID не существует
        - Если в плейлисте нет указанного мэшапа
      403:
        - Если пользователь, который отправил запрос, не является создателем плейлиста


  add_stream:
    mark: 'T'
    name: 'Добавить прослушивание'
    link: '[POST] /playlists/add_stream?id=[ID]'
    description: '**`[!]`** В будущем нужно будет ещё учитывать задержку между запросами.'

    regex:
      ID: '\d+'

    codes:
      200:
        - Если прослушивание добавилось
#      208:
#        - Если менее 60 секунд назад было добавлено другое прослушивание
      400:
        - Если указан некорректный ID
      404:
        - Если плейлист с указанным ID не найден

  add_like:
    mark: 'T'
    name: 'Добавить лайк'
    link: '[POST] /playlist/add_like?id=[ID]'
    description: '**`[!]`** В идеале должен быть хоть какой-то таймаут, но время таймаута надо обсудить.'

    regex:
      ID: '\d+'

    codes:
      200:
        - Если лайк добавился или уже был добавлен
      400:
        - Если указан некорректный ID
      404:
        - Если плейлист с указанным ID не найден


  remove_like:
    mark: 'T'
    name: 'Убрать лайк'
    link: '[POST] /playlist/remove_like?id=[ID]'

    regex:
      ID: '\d+'

    codes:
      200:
        - Если лайк убрался или уже был убран
      400:
        - Если указан некорректный ID
      404:
        - Если плейлист с указанным ID не найден


  get_likes:
    mark: 'T'
    name: 'Получить лайки'
    link: '[GET] /playlist/get_likes?id=[IDS]'
    description: 'Данный запрос не проверяет, существует ли плейлист с указанным ID, в таком случае, сервер просто вернёт `false`.'

    regex:
      IDS: '\d+(?:,\d+){1,100}'

    response:
      '1': true
      '2': false
      '3': false
      '4': true

    codes:
      200:
        - Если всё хорошо и слава тебе, Господи
      400:
        - Если указан некорректный ID
