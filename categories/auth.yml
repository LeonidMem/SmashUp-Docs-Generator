header: 'Авторизация и регистрация'

requests:
  authorization:
    name: 'Авторизация'
    link: '[POST] /login'
    description: 'При успешной авторизации устанавливает новое значение куки "token".'

    body:
      username: 'Admin'
      __username__: 'Поле username может быть как никнеймом, так и почтой'
      password: 'NonHashedPassword'

    regex:
      username: '(?=^[а-яА-ЯёЁa-zA-Z0-9_ ]{4,32}$)(?!^\d+$)^.+$'
      password: '[a-zA-Z0-9-_=+()*&^%$#@!]{8,32}'

    codes:
      200:
        - Если авторизация прошла успешно
      400:
        - Если отправлена некорректная почта или никнейм
        - Если пароль не подходит
      404:
        - Если пользователь с указанными почтой или никнеймом не найден


  register:
    name: 'Регистрация'
    link: '[POST] /register'
#    description: 'При успешной регистрации будет отправлено письмо на почту.'
    description: '**[ТЕСТ]** Письмо на почту не отправляется. Коды неактуальны и необновлены.'

    body:
      username: 'УННВ'
      email: 'unnv@smashup.ru'
      password: 'NonHashedPassword'

    regex:
      username: '(?=^[а-яА-ЯёЁa-zA-Z0-9_ ]{4,32}$)(?!^\d+$)^.+$'
      password: '[a-zA-Z0-9-_=+()*&^%$#@!]{8,32}'

    codes:
      200:
        - Если письмо с подтверждением было отправлено на почту
      400:
        - Если отправлена некорректная почта, никнейм или пароль
        - Если пользователь с отправленными почтой или никнеймом уже зарегистрирован
        - Если письмо подтверждения уже было отправлено


#  register_confirm:
#    name: 'Подтверждение регистрации'
#    link: '[POST] /register_confirm?id=[ID]'
#    description: 'При успешной авторизации устанавливает новое значение куки "token".'
#
#    regex:
#      ID: '{UUID RegEx}'
#
#    codes:
#      200:
#        - Если пользователь был зарегистрирован
#      404:
#        - Если подтверждение регистрации с указанными ID не найдено
#      500:
#        - Если произошла ошибка при создании пользователя
