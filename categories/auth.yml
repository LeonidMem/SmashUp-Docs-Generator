header: 'Авторизация и регистрация'

requests:
  authorization:
    name: 'Авторизация'
    link: '[POST] /login'
    description: 'Поле `username` может быть как никнеймом, так и почтой.'

    body:
      username: 'Admin'
      password: 'NonHashedPassword'

    response:
      id: 1
      username: 'SmashUp'
      imageUrl: 'default'
      backgroundColor: 16777215
      permissions: 7
      token: 'd404f899-eac6-4355-a651-1a8daef84550'

    regex:
      username: '(?=^[а-яА-ЯёЁa-zA-Z0-9_ ]{4,32}$)(?!^\d+$)^.+$'
      password: '[a-zA-Z0-9-_=+()*&^%$#@!]{8,32}'

    codes:
      200:
        - Если авторизация прошла успешно
      400:
        - Если отправлена некорректная почта или никнейм
        - Если пароль не подходит
      404:
        - Если пользователь с указанными почтой или никнеймом не найден


  register:
    name: 'Регистрация'
    link: '[POST] /register'
    description:
      - 'При успешной регистрации будет отправлено письмо на почту.'
      - 'Параметр `vkId` необязательный.'

    body:
      username: 'УННВ'
      email: 'unnv@smashup.ru'
      password: 'NonHashedPassword'
      vkId: 1000

    regex:
      username: '(?=^[а-яА-ЯёЁa-zA-Z0-9_ ]{4,32}$)(?!^\d+$)^.+$'
      password: '[a-zA-Z0-9-_=+()*&^%$#@!]{8,32}'

    codes:
      200:
        - Если письмо с подтверждением было отправлено на почту
      400:
        - Если отправлена некорректная почта, никнейм или пароль
        - Если пользователь с отправленными почтой или никнеймом уже зарегистрирован
        - Если письмо подтверждения уже было отправлено
        - Если указанный vkId не был запрошен с сервера SmashUp или если он не соответствует действительности


  register_confirm:
    name: 'Подтверждение регистрации'
    link: '[POST] /register/confirm?id=[ID]'

    request: '/register/confirm?id=6d3fbb66-6da5-41c8-b27a-b8e7e6433d75'
    response:
      id: 1
      username: 'SmashUp'
      imageUrl: 'default'
      backgroundColor: 16777215
      permissions: 7
      token: 'd404f899-eac6-4355-a651-1a8daef84550'

    regex:
      ID: '{UUID RegEx}'

    codes:
      200:
        - Если пользователь был зарегистрирован
      404:
        - Если подтверждение регистрации с указанными ID не найдено
      500:
        - Если произошла ошибка при создании пользователя


  vk_authorize_url:
    name: 'Получить ссылку для авторизации через VK'
    link: '[GET] /vk/authorize/url'
    description: 'Перейдя по указанной ссылке, откроется VK OAuth, после которого пользователь будет перенаправлен на адрес `https://smashup.ru/vk/authorize?code=[CODE]`.'

  vk_authorize:
    name: 'Авторизоваться через VK'
    link: '[GET] /vk/authorize?code=[CODE]'
    description: 'Возвращает не список сущностей, как это показано ниже, а лишь одну из них *(без каких-либо массивов)*.'

    request: '/vk/authorize?code=88a28005b53e241031'
    response:
      - id: 1
        username: 'SmashUp'
        imageUrl: 'default'
        backgroundColor: 16777215
        permissions: 7
        token: 'd404f899-eac6-4355-a651-1a8daef84550'
        loggedIn: true
      - vkId: 1000
        email: 'email@gmail.com'
        loggedIn: false

    codes:
      200:
        - Если пользователь должен быть зарегистрирован или если он успешно вошёл
      500:
        - Если произошла ошибка при получении данных пользователя


  vk_link_url:
    mark: 'T'
    name: 'Получить ссылку для привязки VK'
    link: '[GET] /vk/link/url'
    description: 'Перейдя по указанной ссылке, откроется VK OAuth, после которого пользователь будет перенаправлен на адрес `https://smashup.ru/vk/link?code=[CODE]`.'

  vk_link:
    mark: 'T'
    name: 'Привязать VK к учётной записи'
    link: '[GET] /vk/link?code=[CODE]'

    codes:
      200:
        - Если всё хорошо и слава тебе, Господи
      409:
        - Если существует пользователь, привязанный к данной учётной записи VK
      500:
        - Если произошла ошибка при получении данных пользователя
